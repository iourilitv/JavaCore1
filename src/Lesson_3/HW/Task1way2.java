package Lesson_3.HW;

import java.util.*;

/**
 * Java Core. Продвинутый уровень.
 * Вебинар 03 июня 2019 MSK (UTC+3).
 * Урок 3. Коллекции.
 * Home Work.
 * @author Yuriy Litvinenko.
 * 1. Создать массив с набором слов (10-20 слов, среди которых должны встречаться
 * повторяющиеся). Найти и вывести список уникальных слов, из которых состоит массив
 * (дубликаты не считаем). Посчитать, сколько раз встречается каждое слово.
 * Способ 2.
 * Через копирование массива в список и подсчета повторений за один цикл с помощью HashMap.
 * Преимущества перед способом 1 - сохраняются значения повторений слова в массиве.
 */
public class Task1way2 {
    public static void main(String[] args) {
        //создаем тестовый массив строк с дубликатами
        String[] words = {"abc", "aaa", "abb", "acc", "abc",
                "cbb", "ccc", "bbb", "acc", "bab",
                "cbb", "cbc", "bab", "acc", "abc",
        };
        //выводим массив в консоль
        System.out.println(Arrays.toString(words));

        //создаем коллекцию емкостью равной длине массива
        Map<String, Integer> wordsMap = new HashMap<>(words.length);

        //в цикле сравниваем текущий элемент с другими и суммируем количество повторений
        for (int i = 0; i < words.length; i++) {
            //с помощью метода merge добавляем текущий элемент в отображение(список) со значением 1,
            // а если его еще нет, увеличиваем значение на 1.
            //это заменяет кучу кода через применение методов getOrDefault (), put().
            wordsMap.merge(words[i], 1, Integer::sum);
        }

        //выводим в консоль список текущих элементов и количество повторений
        for (Map.Entry w: wordsMap.entrySet()) {
            System.out.print(w.getKey() + ":" + w.getValue() + " ");

        }
        // Результат:

    }

}
